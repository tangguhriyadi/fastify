// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String @unique
  password String
  created_at DateTime @default(now())
  accounts PaymentAccount[]
  transaction_out Transaction[] @relation("User_Sender")
  transaction_in Transaction[] @relation("User_Recipient")
}

model PaymentAccount {
  account_id Int @id @default(autoincrement())
  account_type String
  balance Int
  user_id Int
  currency String
  user User @relation(fields: [user_id], references: [id])
  payment_history PaymentHistory[]
  created_at DateTime @default(now())
}

model PaymentHistory {
  id Int @id @default(autoincrement())
  transaction_id Int 
  transaction Transaction @relation(fields: [transaction_id], references: [id])
  account_id Int 
  payment_account PaymentAccount @relation(fields: [account_id], references: [account_id])
  payment_type String
}

model Transaction {
  id Int @id @default(autoincrement())
  amount Int
  user_id Int
  user User @relation("User_Sender",fields: [user_id], references: [id])
  recipient_id Int
  recipient User @relation("User_Recipient",fields: [recipient_id], references: [id])
  status String
  comment String
  currency String
  created_at DateTime @default(now())
  payment_history PaymentHistory[]
}
